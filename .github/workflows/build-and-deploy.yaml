name: Build and deploy Next.js app to CloudFront

on: 
  push:
    branches:
      - main

jobs: 
  build-and-deploy:
    name: Build and Deploy to CloudFront
    runs-on: ubuntu-latest
    env:
      BUCKET: www.chisomdevopsbyexample.io
      DIST: build
      REGIONS: eu-north-1
      DIST_ID: E2ZCFKHSDZVVSP

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGIONS }}

      - name: Install dependencies
        run: |
          node --version
          npm ci --production

      - name: Build Static Website
        run: npm run build

      - name: Sync files to S3
        run: |
          aws s3 sync --delete ./${{ env.DIST }} s3://${{ env.BUCKET }}

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.DIST_ID }} \
            --paths "/*"

      - name: Example - Set a custom output (new way)
        id: set_output
        run: echo "build_status=success" >> "$GITHUB_OUTPUT"

      - name: Example - Use that output
        run: echo "The build status was ${{ steps.set_output.outputs.build_status }}"
